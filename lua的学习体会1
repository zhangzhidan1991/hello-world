1 lua GC的工作原理：
  lua通过步进式垃圾收集方法的方法来实现内存管理，不选择引用计数的原因是引用计数带来的额外开销太大，尤其是即使一段程序
  完全不分配内存，你也需要承担这额外开销
  
  详情请见云风的博客：https://blog.codingnow.com/2018/10/lua_gc.html
  
  
2 lua与C++的交互：
  要理解Lua和C++交互，首先要理解Lua堆栈。简单来说，Lua和C/C++语言通信的主要方法是一个无处不在的虚拟栈。栈的特点是先进后出。
  在Lua中，Lua堆栈就是一个struct，堆栈索引的方式可是是正数也可以是负数，区别是：正数索引1永远表示栈底（该值从栈底向栈顶递增,如1，2...)
  负数索引-1永远表示栈顶（该值从栈顶向栈底递减，如-1，-2...）
  这个栈是在创建lua_State的时候创建的，存入栈的数据类型包括数值, 字符串, 指针, talbe, 闭包等
  
  详情请见博客：https://www.cnblogs.com/sevenyuan/p/4511808.html
